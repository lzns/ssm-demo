<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dzf.dao.IndexDao" >
  <resultMap id="BaseResultMap" type="index" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,state,name,age
  </sql>
  <select id="queryByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ssmTest
    where state = #{str};
  </select>
  
  <insert id="insert" parameterType="index" useGeneratedKeys="true" keyProperty="id">
  	insert into ssmTest 
  	<trim prefix="(" suffix=")" suffixOverrides=",">
  		<if test="name!=null">
  			name,
  		</if>
  		<if test="age!=null">
  			age,
  		</if>
  		<if test="state!=null">
  			state
  		</if>
  	</trim>
  	<trim prefix="values(" suffix=")" suffixOverrides=","> 
  	<!-- 需要查询suffixOverrrdes(它的意思是忽略第一个逗号)代表什么意思，如果下面没有逗号，我第一次接没有写逗号，结果报了貌似乱码的错误 -->
  		<if test="name!=null">
  			#{name},
  		</if>
  		<if test="age!=null">
  			#{age},
  		</if>
  		<if test="state!=null">
  			#{state}
  		</if>
  	</trim>
  </insert>
  
  <select id="getList" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/>
  	from ssmTest t
  	<where>
  		<if test="name!=null">
  			<!-- 模糊查询这种写法比较的lowbi  不能防止sql注入的情况 -->
	  		<!-- t.name like ('%${name}%') -->
	  		
	  		<!-- 这种写法会报错，会将（‘%？%’） 看成一个字符串 -->
	  		<!-- t.name like ('%#{name}%') -->
	  		
	  		<!-- 推荐使用这种写法 -->
	  		t.name like concat('%',#{name},'%')
  		</if>
  		<if test="age!=null">
	  		and t.age > #{age}
  		</if>
  	</where>
  </select>
  
  <!-- 插入一条数据返回这条数据的主键 -->
  <insert id="getPkByInsert" >
  	<selectKey keyProperty="id" order="AFTER" resultType="long">
  		select last_insert_id()
  	</selectKey>
  	insert into ssmTest (name,age,state) values(#{name},#{age},#{state})
  </insert>
  
  <insert id="insertAuthor" useGeneratedKeys="true" keyProperty="id">
  insert into author
  <trim prefix="(" suffix=")" prefixOverrides=",">
  	<if test="name!=null">
		name,  		
  	</if>
  	<if test="age!=null">
  		age,
  	</if>
  	<if test="tel!=null">
  		tel
  	</if>
  </trim>
  	values
  <trim prefix="(" suffix=")" prefixOverrides=",">
  	<if test="name!=null">
		#{name},  		
  	</if>
  	<if test="age!=null">
  		#{age},
  	</if>
  	<if test="tel!=null">
  		#{tel}
  	</if>
  </trim>  
  </insert>
  
  
  <!-- 分页查询 -->
  
  <select id="queryForPage" resultMap="BaseResultMap" >
  	select <include refid="Base_Column_List"></include>
  		from ssmTest t 
  		where t.id in 
  		<foreach collection="array" item="item" open="(" close=")" separator=",">
  			#{item}
  		</foreach>
  </select>
  
  
  <!-- <delete id="delete" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
 
  <insert id="insert" parameterType="com.shsxt.crm.vo.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="trueName != null" >
        true_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.shsxt.crm.vo.User" >
    update t_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryUserByUserNameAndRoleId"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_user
    where user_name=#{userName} and role_id=#{roleId}
  </select>
  
  
  <select id="queryCustomerManager" resultType="user">
    select id,true_name as trueName 
    from t_user
    where role_id=3  and is_valid=1
  </select>-->
  
  
  
  <!-- <select id="queryForPage" parameterType="userQuery" resultMap="BaseResultMap">
     select <include refid="Base_Column_List"/>
     from t_user
     
     <where>
       is_valid=1
       <if test="@Ognl@isNotEmpty(userName)">
           and user_name like concat('%',#{userName},'%')
       </if>
       <if test="@Ognl@isNotEmpty(email)">
           and email like concat('%',#{email},'%')
       </if>
       <if test="@Ognl@isNotEmpty(phone)">
           and phone like concat('%',#{phone},'%')
       </if>
     
     </where>
  
  </select> 
  
  <select id="queryUserByUserName" resultMap="BaseResultMap">
      select <include refid="Base_Column_List"/>
     from t_user
     where is_valid=1 and user_name=#{userName}
  </select>
  
  <update id="deleteBatch"  >
    update t_user
    set is_valid=0
    where id in
    <foreach collection="array" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  
  </update> -->
  <!-- 一对多 -->
  <resultMap type="author" id="authorMap">
	  <id column="id" property="id"/>
	  <result column="name" property="name"/>
	  <result column="age" property="age"/>
	  <result column="tel" property="tel"/>
	  <collection property="noteList" ofType="note">
		  <id column="note_id" property="noteId"/>
		  <result column="descrition" property="descrition"/>
		  <result column="title" property="title"/>
	  </collection>
  </resultMap>
  
  <select id="queryAuthorAndNotes" resultMap="authorMap">
	select t1.id ,t1.name,t1.age,t1.tel,t2.note_id
	,t2.descrition,t2.title,t2.author_id
	from author t1,note t2
	where t1.id = t2.author_id
	and t1.id = #{id}
  </select>
  
  
  <!-- 查询笔记关联查询出作者的信息 -->
  <!-- 一对多 -->
  <resultMap type="note" id="noteMap">
	  <id column="note_id" property="noteId"/>
	  <result column="descrition" property="descrition"/>
	  <result column="title" property="title"/>
	  <association property="author"  javaType="author">
	  	<id column="id" property="id"/>
	  	<result column="name" property="name"/>
	  	<result column="age" property="age"/>
	  	<result column="tel" property="tel"/>
	  </association>
  </resultMap>
  
  <select id="queryNoteAndAuthor" resultMap="noteMap">
	  select 
	  	t2.*,
	  	t1.id,
	  	t1.name,
	  	t1.age,
	  	t1.tel
	  from author t1,note t2
	  where t1.id = t2.author_id
	  and t2.note_id = 2
  <!-- select * from note t where t.note_id = 1 -->
  </select>
</mapper>