/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-02-28 07:57:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class testJson_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>测试json数据格式类型的数据的传递</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"static/js/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function test1(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype:'post',\r\n");
      out.write("\t\turl:'json/test1',\r\n");
      out.write("\t\tdatatype:'josn',\r\n");
      out.write("\t\tsuccess:function(text){\r\n");
      out.write("\t\t\tvar code = text.code;\r\n");
      out.write("\t\t\tvar desc = text.desc;\r\n");
      out.write("\t\t\talert(code+desc);\r\n");
      out.write("\t\t\tvar obj = text.data;\r\n");
      out.write("\t\t\talert(obj.name + obj.age);\r\n");
      out.write("\t\t\tvar str = JSON.stringify(text);\r\n");
      out.write("\t\t\talert(str);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror:function(data){\r\n");
      out.write("\t\t\talert(\"后台发生异常，请联系管理员！\");\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tasyn:false,\r\n");
      out.write("\t\tcache:false\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("function test2(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype:'post',\r\n");
      out.write("\t\turl:'json/test2',\r\n");
      out.write("\t\tdatatype:'json',\r\n");
      out.write("\t\tsuccess:function(text){\r\n");
      out.write("\t\t\talert(text);\r\n");
      out.write("\t\t\talert(text.code+text.desc);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror:function(text){\r\n");
      out.write("\t\t\talert(\"后台发生异常！\");\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tasyn:false,\r\n");
      out.write("\t\tcache:false \r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("function test3(){\r\n");
      out.write("\tvar json = '{\"name\":\"李四\",\"age\":\"23\"}';\r\n");
      out.write("\tvar $json = eval(\"(\"+json+\")\");\r\n");
      out.write("\talert(typeof($json));//object\r\n");
      out.write("\talert($json.name);//李四\r\n");
      out.write("}\r\n");
      out.write("function test4(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype:'post',\r\n");
      out.write("\t\turl:'json/test4',\r\n");
      out.write("\t\tdatatype:'json',\r\n");
      out.write("\t\tdata:{name:\"丁振锋\",age:\"323\"},\r\n");
      out.write("\t\tsuccess:function(text){\r\n");
      out.write("\t\t\tif(text!=null){\r\n");
      out.write("\t\t\t\talert(typeof(text));\r\n");
      out.write("\t\t\t\talert(text.desc);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror:function(text){\r\n");
      out.write("\t\t\talert(\"后台发生异常！\");\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tasyn:false,\r\n");
      out.write("\t\tcache:false\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("function test6(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype:'post',\r\n");
      out.write("\t\turl:'json/test6',\r\n");
      out.write("\t\tcontentType:'application/x-result',\r\n");
      out.write("\t\tdata:{code:\"200\",desc:\"我是丁振锋\"},\r\n");
      out.write("\t\tsuccess:function(text){\r\n");
      out.write("\t\t\talert(text);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror:function(data){\r\n");
      out.write("\t\t\talert(\"后台异常！\")\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tasyn:false,\r\n");
      out.write("\t\tcache:false\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2 align=\"center\">本页面进行json数据传输测试</h2>\r\n");
      out.write("\t<form action=\"\" >\r\n");
      out.write("\t\t<input type=\"button\" value=\"测试1后台返回对象\" onclick=\"test1();\"/>\r\n");
      out.write("\t\t<input type=\"button\" value=\"测试2后台返会字符串\" onclick=\"test2();\"/>\r\n");
      out.write("\t\t<input type=\"button\" value=\"测试eval函数返回json对象\" onclick=\"test3();\"/>\r\n");
      out.write("\t\t<input type=\"button\" value=\"测试前台json数据传到后台\" onclick=\"test4();\"/>\r\n");
      out.write("\t\t<input type=\"button\" value=\"测试自定义消息转换器\" onclick=\"test6();\"/>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
