@Controller
public class FileUploadController{
		
		
		@value("${IMG_SERVER_URL}")
		private String IMG_SERVER_URL;
		
		@requestMapping("/pic/upload")
		@responseBody              // responseBody 的意思是以response的方式将数据写回去
		public Map uploadFile(MultipartFile multipartFile){
			Map map = new  HashMap();
			try{
				String originFileName = multipartFile.getOriginFileName();
				String  exName = originFileName.substring(originFileName.lastIndexOf(".")+1);
				
				// 上传图片到服务器
				FastDFSClinet fastDFSClient = new FastDFSClinet("classpath:client.conf");
				
				String url = fastDFSClient.upload(multipartFile.getBytes(),exName);
				url = IMG_SERVER_URL + url;
				
				//响应上传的图片的url 
				
				map.put("url",url);
				map.put("error",0);
			}catch(Exception e){
				e.printStackTrace();
				map.put("message","上传失败。。。");
				map.put("error",1);
			}
			return map;
		} 
	
		//解决浏览器兼容问题 只需要返回一个json数据就可以啦 ，
		@requestMapping("/pic/upload")
		@responseBody              // responseBody 的意思是以response的方式将数据写回去
		public String uploadFile(MultipartFile multipartFile){
			Map map = new  HashMap();
			try{
				String originFileName = multipartFile.getOriginFileName();
				String  exName = originFileName.substring(originFileName.lastIndexOf(".")+1);
				
				// 上传图片到服务器
				FastDFSClinet fastDFSClient = new FastDFSClinet("classpath:client.conf");
				
				String url = fastDFSClient.upload(multipartFile.getBytes(),exName);
				url = IMG_SERVER_URL + url;
				
				//响应上传的图片的url 
				
				map.put("url",url);
				map.put("error",0);
				String jsonStr = FastJosn.objectToJson(map);
				
			}catch(Exception e){
				e.printStackTrace();
				map.put("message","上传失败。。。");
				map.put("error",1);
				String jsonStr = FastJosn.objectToJson(map);
			}
			return jsonStr;
		} 
	
}


