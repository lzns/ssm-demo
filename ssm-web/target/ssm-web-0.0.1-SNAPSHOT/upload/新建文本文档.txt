使用ssm配置。
在web.xml中需要两个基本配置，第一个前端控制器，dispatchservlet 
例如：
<servlet>
	<servlet-name>springmvc</servlet-name>
	<servlet-class>org.springframework...dispatchservlet</servet-class>
	<!-- 加载类路径下的所有xml文件 -->
	<init-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>classpath:*.xml</param-value>
	</init-param>
</servlet>
<servlet-mapping>
	<servlet-name>springmvc</servlet-name>
	<!-- 这里表示拦截所有的请求-->
	<url-pattern>/</url-pattern>
</servlet-mapping>

注意：这里的url-pattern 拦截所有写成/ 不要写/** 这样是拦截不到的

<!-- 配置过滤编码器-->
<filter>
	<filter-name>characterEncodingFilter</filter-name>
	<filter-class>org.springframework...characterEncodingFilter</filter-class>
	<init-param>
		<param-name>encoding</param-name>
		<param-value>utf-8</param-value>
	</init-param>
</filter>
<filter-mapping>
	<filter-name>characterEncodingFilter</filter-name>
	<url-parttern>/*</url-parttern>
</filter-mapping>

第二部分：spring-servlet.xml的配置
1.配置扫描包的形式方便依赖注入：
<context:component-scan base-package="com.dzf"/>
2.引入配置文件
<context:property-placeholder location="classpath:jdbc.property,classpath:config.properties"/>
3.打开注解。配置适配器和处理器
<mvc:annotation-driven>
	<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	</mvc:message-converters>
</mvc:annotation-driven>
4.视图解析器（配置的方式有多种，根据项目的实际情况选择配置哪种模板）
<!--对jsp模板的配置 -->
<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
</bean>
<!--对freemark模板的配置 -->
<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="number_format">0.######</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="tag_syntax">square_bracket</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
			</props>
	 </property>
	 	<property name="freemarkerVariables">
			<map>
				<entry key="navigation_list" value-ref="nagitiveList" />
				<entry key= "hot_search_keywords" value-ref="hotSearchDirective"/>
				<entry key="product_category_root_list" value-ref="productCategoryDirective"/>
				<entry key="product_category_children_list" value-ref="productCategoryChildenDirective" />
				<entry key="brand_list" value-ref="brandDirective" />
				<entry key="promotion_list" value-ref="promotionDirective" />
				<entry key="ad_position" value-ref="adPositionDirective" />
				<entry key="ad_list" value-ref="adDirective" />
				<entry key="article_category_root_list" value-ref="articalCategoryDirective" />
				 <entry key="article_list" value-ref="articalDirective" />
				<entry key="goods_list" value-ref="goodsDirective" />
				
				<entry key="friend_link_list" value-ref="friendLinkDirective" />
				<!--  <entry key="hot_search_keywords" value-ref="hotSearchKeywordsDirective" />
				<entry key="product_category_parent_list" value-ref="productCategoryParentListDirective" />
				<entry key="attribute_list" value-ref="attributeDirective" />-->
			</map>
		</property>
		
</bean>
<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />

</bean>

在搭建ssm框架时候踩得坑：
1.对于拦截器url-parttern的设置：第一次设置的是/** 本以为这个是表示拦截所有，没想到这是错误的写法，正确的写法是/
	启动项目不会报错，但是会出现404 找不到要访问的路径
2.在pom.xml 文件中servlet的作用域没有设置为provided  这个表示使用jdk或者容器的 默认的是compile 
	启动项目报错：Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].StandardContext[/ssm-web]]
3.访问项目的时候报错：Handler processing failed; nested exception is java.lang.NoClassDefFoundError: javax/servlet/jsp/jstl/core/Config
	原因是缺少jstl的jar包
	解决办法：将jstl的依赖加上
	加上之后需要install 否则没有效果
4.在spring-service.xml中配置了别名的方式：
<property name ="typeAliasesPackage" value="classpath:com.dzf.entity"></property>
只好在mybatis.xml中配置别名的方式
5.使用注解的方式使用声明式事务，在这里又踩了个坑
	我是这样配的
	<tx:annotation-driven />
但是我的事务管理器的名字ID为txManager
正确的配置应该是
	<tx:annnotation-driven transaction-manager="txManager"/>
也可以这样写 sdf
<tx:annotation-driven > 但是这样的写法要求你ye 




