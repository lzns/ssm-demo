<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context.xsd
	 http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop.xsd
	 http://www.springframework.org/schema/tx
	 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 扫描 com.dzf 及其所有子包下类 -->
	<context:component-scan base-package="com.dzf" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> 
	<!-- 加载 properties 配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 开启自动扫描 -->
	<!-- aop -->
	<aop:aspectj-autoproxy />
	<!-- 配置数据源 -->
	<!-- 配置 c3p0 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 设置事物增强 
		对那些方法加上事务
	-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- aop 切面配置 -->
	<aop:config>
		<aop:pointcut id="servicePointcut" expression="execution(* com.dzf.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut" />
	</aop:config>

	<!-- 使用事务注解的方式 -->
	<tx:annotation-driven/>
	
	<!-- 配置 sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml" />
		<!--  自动扫描 com/dzf/mapper 
			目录下的所有 SQL 映射的 xml 文 件, 省掉 mybatis.xml 里的手工配置 value="classpath:com/shsxt/crm/mapper/*.xml"指的是 
			classpath(类路径) 下 com.shsxt.crm.mapper 包中的所有 xml 文件 UserMapper.xml 位于 com.shsxt.crm.mapper 
			包下，这样 UserMapper.xml 就可 以被自动扫描 -->
		<property name="mapperLocations" value="classpath:com/dzf/mapper/*.xml" />
	</bean>

	<!-- 配置扫描器 使用扫描的形式引入所有的接口类
			引入后可以使用类名，首字母小写即可！
	 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描 com.dzf.dao 这个包以及它的子包下的所有映射接口类 动态实现dao，注入到spring容器中去 -->
		<property name="basePackage" value="com.dzf.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
</beans>
 